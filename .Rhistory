sd2=sd(y)
var(y)
vr2=var(y)
sd1=sd(x)
vr1=sd(x)**2
sd1;vr1;sd2;vr2
#Medyan ortanca değer
#Açıklık max-min
#Çeyreklik
x=c(12,34,56,23,34,12,35)
median(x)
mean(x)
#açıklık
max(x)-min(x)
r=range(x)
r[2]-r[1]
#çeyreklik
quantile(x)
quantile(x, probs=c(0.25,0.5,0.75))
#Çarpıklık Katsayısı -1 1 arasındadır
#sola çarpıklık yüksek değerler
#sağa çarpıklık düşük değerler
x=c(12,13,14,15,16,100,120)
mean(x)
median(x)
y=c(12,15,17,18,20,24,26)
mean(y)
median(y)
hist(x)
install.packages("e1071")
library(e1071)
skewness(x)
z=c(1,2,3,60,70,60,70,80,70)
hist(z)
skewness(z)
x=c(12,12,13,13,14,14,12,12,15,15,16)
length(x)
x=c(12,12,13,13,14,14,13,12,12,15,15,16)
length(x)
unique(x)
table(x)
t=table(x)
t
names(t)
t["12"]
t[1]
t[["12"]]
vlass(t)
vlass(t)
class(t)
c=c("a","a","a","b","b","c")
table(c)
t1=table(c)
t2[["a"]]
t1[["a"]]
t1[1]
t1["a"]
sum(x)
x=c(12,13,14,15,NA)
sum(x)
sum(x, na.rm = T)
x=c(12,13,14,15,NA)
sum(x)
sum(x, na.rm = T)
mean(x, na.rm = T)
(12+13+14+15)/4
(12+13+14+15)/5
sd(x, na.rm = T)
meidan(x, na.rm=T)
median(x, na.rm=T)
#Na tespit etme
is.na(x)
which(is.na(x))
y=c(12,13,14,15,NA,NA,14,1,15,NA)
which(is.na(y))
any(is.na(y))
mean(x, na.rm=any(is.na(y)))
which(is.na(y))
n=which(is.na(y))
y[n]
y[n]=0
y
12,13,14,15,NA,NA,14,1,15,NA
y=c(12,13,14,15,NA,NA,14,1,15,NA)
y[is.na(y)]
y[is.na(y)]=0
y
#normal dağılan veriler
rnorm(100)
#normal dağılan veriler
r=rnorm(100)
hist(r)
rnorm(30,mean=10,sd=3)
r1=rnorm(30,mean=10,sd=3)
hist(r1)
r=rnorm(100)
round(r)
mean(r)
sd(r)
median(r)
?quantile
quantile(r,probs = c(0.25,0.75))
fark=mean(r)-median(r)
fark
#Veri Türleri
x=factor(c("a","b","c","d"))
x
df=data.frame("A"=c(12,14,15,16,17),
"B"=c(12,17,67,54,34),
"C"=c("a","b","c","d","e"))
df
length(df$A)
nrow(df)
ncol(df)
length(df)
n=nrow(df)*ncol(df)
n
dim(df)
d=dim(df)#satır sütun değerleri
n1=d[1]*d[2]
n1
n
#Sorgu İşlemleri
df=data.frame("A"=rnorm(100,mean=10,sd=2),
"B"=rnorm(100,mean=34,sd=10),
"C"=rnorm=(100,mean=45,sd=15))
#Sorgu İşlemleri
df=data.frame("A"=rnorm(100,mean=10,sd=2),
"B"=rnorm(100,mean=34,sd=10),
"C"=rnorm(100,mean=45,sd=15))
df
View(df)
df$A
df$A<7
df$A<8
wihch(df$A<8)
which(df$A<8)
idx=which(df$A<8)
df[idx,]#idx satır sayısı
df[idx,c("B","C")]
df2=df[idx,c("B","C")]#A'yı yazmaz
df2
class(df2)
df
mean(df$B)
df$B<mea(df$B)
df$B<mean(df$B)
which(df$B<mean(df$B))
idx2=which(df$B<mean(df$B))
df[idx2,]
df[idx2,c("A","C")]
View(df[idx2,c("A","C")])
eksikveriler=data.frame("A"=c(1,2,3,NA,5,6),
"B"=c("a","b","c","d","NA","e"))
eksikveriler
eksikveriler$A==NA
which(is.na(eksikveriler$A))
mean(eksikveriler$A)
which(is.na(eksikveriler$A&eksikveriler$B))
n1=which(is.na(eksikveriler$A))
n2=which(is.na(eksikveriler$B))
n=c(n1,n2)
mean(eksikveriler)
mean(eksikveriler$A)
mean(na.rm=any(is.na(df$A)))
mean(eksikveriler,na.rm=any(is.na(df$A)))
eksikveriler$A[is.na(eksikveriler$A)]=mean(eksikveriler$A,na.rm=TRUE)
eksikveriler
eksikveriler$B[is.na(eksikveriler$B)]=mean(eksikveriler$B,na.rm=TRUE)
data()
CO2
View(CO2)
?subset
names(CO2)
subset(CO2,subset = (uptake>30 & Type=="Quebec"))
df2=subset(CO2,subset = (uptake>30 & Type=="Quebec"))
nrow(CO2)
nrow(df2)
df3=subset(CO2,subset = (uptake>30 & Type=="Quebec"),
select = c(Treatment, conc))
df3
View(df3)
nrow(df3)
df4=subset(CO2,subset = (uptake>30 | Type=="Quebec"),
select = c(Treatment, conc))
View(df4)
nrow(df4)
df4=subset(CO2,subset = (uptake>30 | Type=="Quebec"))
View(df4)
nrow(df4)
#Subset
data()#hazır datalar
#İç İçe Koşullar
CO2
#İç İçe Koşullar
View(CO2)
names(CO2)
df1=subset(CO2, subset=(Type=="Quebec"|Treatment=="nonchilled")&
(uptake>30&uptake<35))
View(df1)
data()
View(iris)
rowMeans(iris[1:4])#İlk 4 satırın ortalaması
d1=rowMeans(iris[1:4])#İlk 4 satırın ortalaması
iris["Ortalama"]=d1
View(iris)
d2=rowMeans(iris[1:2])
iris["Ortalama2"]=d2
View(iris)
#Sütun Ortalaması
c1=colMeans(iris[1:4])
c1
#Gruplar bazında hesaplamalar
View(iris)
which(iris["setosa"])
iris$Species=="setosa"
which(iris$Species=="setosa")
setosa=which(iris$Species=="setosa")
versicolor=which(iris$Species=="versicolor")
virginica=which(iris$Species=="virginica")
meanSetosa=mean(iris[setosa,c("Sepal.Length")])
meanSetosa
meanVersicolor=mean(iris[versicolor,c("Sepal.Length")])
meanSetosa
meanSetosa
meanVersicolor
meanVirginica
meanVirginica=mean(iris[virginica,c("Sepal.Length")])
meanVirginica
meanVirginica;meanVersicolor;meanSetosa
#Kısa yol
aggregate(iris,by=list(iris$Species),FUN=mean)
aggregate(iris[1:4],by=list(iris$Species),FUN=mean)
means=aggregate(iris[1:4],by=list(iris$Species),FUN=mean)
means[1]
means[2]
#Standart sapma
aggregate(iris[1:4],by=list(iris$Species),FUN=sd)
#Toplam
aggregate(iris[1:4],by=list(iris$Species),FUN=sum)
#NA değerler
means=aggregate(iris[1:4],by=list(iris$Species),FUN=mean,na.rm=T)
library(readxl)
singapore <- read_excel("C:/Users/suley/Desktop/singapore.xlsx")
View(singapore)
csv_singapore <- read.csv("C:/Users/suley/Desktop/csv_singapore.csv", sep=";")
View(csv_singapore)
csv_singapore <- read.csv("C:/Users/suley/Desktop/r ile veri bilimi/csv_singapore.csv", sep=";")
View(csv_singapore)
df=csv_singapore
df
class(ds$names)
class(df$names)
class(df$name)
df$name=as.character(df$name)
class(df$name)
df["name"]
class(df["name"])
as.character((df["name"]))
cv=as.character((df["name"]))
cv[1]
cv[2]
df[,c("name")]
class(df[,c("name")])
as.factor(df[,c("name")])
df[,c("name")]=as.factor(df[,c("name")])
class(df[,c("name")])
df$name=as.character(df$name)#chara çevirme
class(df$name)
class(df[,c("name")])
class(df$id)
df$id=as.numeric(df$id)
df$id=as.numeric(df$id,na.rm=T)
class(df$id)
class(df[,c("name")])#char
df[,c("name")]=as.factor(df[,c("name")])#factöre çevirme
class(df[,c("name")])
class(df$id)
View(csv_singapore)
View(csv_singapore)
csv_singapore <- read.csv("C:/Users/suley/Desktop/r ile veri bilimi/csv_singapore.csv", sep=";", stringsAsFactors=TRUE)
View(csv_singapore)
class(df$id)
df=csv_singapore
class(df$name)
df$name=as.character(df$name)#chara çevirme
class(df$name)
df["name"]
class(df["name"])
df[,c("name")]
class(df[,c("name")])#char
as.factor(df[,c("name")])
df[,c("name")]=as.factor(df[,c("name")])#factöre çevirme
class(df[,c("name")])
class(df[,c("name")])
class(df[,c("name")])
class(df[,c("name")])
class(df$name)
df$name=as.character(df$name)#chara çevirme
class(df$name)
#Char to numeric
class(df$id)
#Factor to numeric
x=df$id
class(x)
as.numeric(x)
df$id=as.character(df$id)
class(df$id)
df$id=as.numeric(df$id)
class(df$id)
any(is.na(df$id))
#Numeric to İnt
df$id=as.integer(df$id)
class(df$id)
#
class(df$host_id)
df$host_id=as.character(df$host_id)
df$host_id=as.numeric(df$host_id)
class(df$host_id)
#Geçerli olmayan silme
class(df$room_type)
df$room_type=as.character(df$room_type)
table(df$room_type)
inds=which(df$room_type==""|df$room_type=="110"|
df$room_type=="1200"|df$room_type=="294"|
df$room_type=="299"|df$room_type=="31"|df$room_type=="40"|
df$room_type=="50"|df$room_type=="60"|df$room_type=="74"|
df$room_type=="75"|df$room_type=="750")
inds
df=df[-inds,]
table(df$room_type)
View(iris)
apply(iris[1:4], MARGIN=1, FUN=mean)
mean(iris[1,1:4])
mean(as.numeric(iris[1,1:4]))
class(iris[1,1:4])
apply(iris[1:4], MARGIN=1, FUN=sd)
sd(as.numeric(iris[1,1:4]))
apply(iris[1:4], MARGIN=1, FUN=sum)
apply(iris[1:4], MARGIN=2, FUN=sd)#Sütunlar bazında
apply(iris[1:4], MARGIN=2, FUN=sd)#Sütunlar bazında
apply(iris[1:4], MARGIN=2, FUN=mean)
apply(iris[1:4], MARGIN=2, FUN=sum)
apply(iris[1:4], MARGIN=2, FUN=var)
apply(iris[1:4], MARGIN=2, FUN=max)
apply(iris[1:4], MARGIN=2, FUN=min)
lapply(iris, FUN=mean)
l=list("a"=c(13,25,64,85,50,42),
"b"=c(13,584,21,58,47,12),
"c"=c(45,452,4,1,47,7,45))
lapply(l, FUN=mean)
lapply(l, FUN=sd)
lapply(l, FUN=max)
csv_singapore <- read.csv("C:/Users/suley/Desktop/r ile veri bilimi/csv_singapore.csv", sep=";")
View(csv_singapore)
#With() kullanımı
df=csv_singapore
names(df)
df$id
df["id"]
attach(df)#dataframe içerisindekileri vektör olarak çıkarır
host_name
host_id
class(host_id)
detach(df)
host_id
with(df, print(host_name))
with(df, print(host_name),
print(host_id))
print(y)
with(df,{
x=mean(price)
y=x-5
print(y)
})
with(df,{
x=mean(price, na.rm=T)
y=x-5
print(y)
})
read.csv("WomenFootballResults.csv")
read.csv("WomenFootballResults")
read.csv("WomenFootballResults.csv")
setwd("C:/Users/suley/Desktop/r ile veri bilimi")
read.csv("WomenFootballResults.csv")
df=read.csv("WomenFootballResults.csv")
View(df)
class(df$date)
df$date=as.Date(df$date)
class(df$date)
df$date>"1980-12-1"
df$date>"1980-12-1"&df$date<"2019-12-31"
names(df$home_team)
class(df$home_team)
data=subset(df, subset = (date>"1980-12-1" & date<"2019-12-31")|
(home_town=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
data=subset(df, subset = (date>"1980-12-1" & date<"2019-12-31")|
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
View(data)
data=subset(df, subset = (date>"1980-12-1" & date<"2019-12-31")&
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
View(data)
data=subset(df, subset = (date>"1980-12-1" & date<"2019-12-31")|
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
View(data)
data=subset(df, subset = (date>"1980-12-1" & date<"2019-12-31")&
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
View(data)
View(df)
class(df$date)
data=subset(df, subset = (date>as.Date(1980-12-1) & date<as.Date(2019-12-31))
&
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
df$date=as.Date(df$date, format="%Y-%m-%d")
class(df$date)
data=subset(df, subset = (date>as.Date(1980-12-1) & date<as.Date(2019-12-31))
&
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
data=subset(df, subset = (date>as.Date("1980-12-1") & date<as.Date("2019-12-31"))
&
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c(date,home_score,away_score,home_team,away_team))
data=subset(df, subset = (date>as.Date("1980-12-1") & date<as.Date("2019-12-31"))
&
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c("date","home_score","away_score","home_team"
,"away_team"))
class(df$date)
df$Data <- as.Date(df$date , format = "%Y-%m-%d")
df$Data=as.Date(df$date, format="%Y-%m-%d")
class(df$Data)
data=subset(df, subset = (date>as.Date("1980-12-1") & date<as.Date("2019-12-31"))
&
(home_team=="Hong Kong"&away_team=="Phlippines"),
select = c("date","home_score","away_score","home_team"
,"away_team"))
## Subset fonksiyonu ile belirlenen koşulların oluşturulması
## Lütfen subset deki parantezlere dikkat ediniz.
sonuc <- subset(df ,
select = c("date", "home_score" , "away_score" , "home_team" , "away_team") ,
subset = (date > as.Date("1980-12-01") & date < as.Date("2019-12-31")) &
(home_team == "Hong Kong" & away_team == "Philippines"))
data=subset(df,
subset = (date>as.Date("1980-12-1") & date<as.Date("2019-12-31"))
&
(home_team=="Hong Kong"&away_team=="Philippines"),
select = c("date","home_score","away_score","home_team"
,"away_team"))
View(data)
View(sonuc)
class(df$date)
df$date=as.Date(df$date, format="%Y-%m-%d")
class(df$date)
data=subset(df,
subset = (date>as.Date("1980-12-1") & date<as.Date("2019-12-31"))
&
(home_team=="Hong Kong"&away_team=="Philippines"),
select = c("date","home_score","away_score","home_team"
,"away_team"))
View(data)
library(car)
library(ggplot2)
###### Mahalobis Distance
X=na.omit(airquality[c("Ozone","Temp")])#KAyıp Değerleri sildik
air.center=colMeans(X)#Ortalamalar
air.center
air.cov=cov(X)#kovaryans
air.cov
dist=mahalanobis(X,center=air.center,air.cov)
dist
cutoff=qchisq(p=0.95,df=2)
ids=which(dist>cutoff)
names(ids)
X[ids,]
fig=ggplot(airquality,aes(x=Ozone,y=Temp))+geom_point(size=2)+
xlab("Ozon Değerleri")+ylab("Sıcaklık Değerleri")#Saçılım diyagramı
fig
X=na.omit(airquality[c("Ozone","Temp")])#KAyıp Değerleri sildik
air.center=colMeans(X)#Ortalamalar
air.center
air.cov=cov(X)#kovaryans
air.cov
radius=sqrt(qchisq(p=0.95,df=2))#Yarıçap--- p değeri küçüldükçe elips küçülür
radius
elips=ellipse(center=air.center,shape=air.cov,radius = radius,
segments=100,draw = FALSE)
elips
elips=as.data.frame(elips)
colnames(elips)=colnames(X)
fig=fig+geom_polygon(data=elips,color="orange",fill="red",alpha=0.3)+
geom_point(aes(x=air.center[1],y=air.center[2]),
size=5,color="blue")
fig
###### Mahalobis Distance
X=na.omit(airquality[c("Ozone","Temp")])#KAyıp Değerleri sildik
air.center=colMeans(X)#Ortalamalar
air.center
air.cov=cov(X)#kovaryans
air.cov
dist=mahalanobis(X,center=air.center,air.cov)
dist
cutoff=qchisq(p=0.95,df=2)
ids=which(dist>cutoff)
names(ids)
X[ids,]
