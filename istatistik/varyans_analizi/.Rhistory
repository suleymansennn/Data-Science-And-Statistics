heart <- read.csv("C:/Users/suley/Desktop/r ile veri bilimi/istatistik/varyans_analizi/heart.csv")
View(heart)
#2 bağımlı Değişken
#Çok Değişkenli Manova
library(tidyverse)
library(rstatix)
library(mvnormtest)
install.packages("mvnormtest")
library(mvnormtest)
heart%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(chol,thalach)))
heart%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(as.data.frame(chol,thalach)))
heart%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(chol,thalach)))
heart%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(chol,thalach))$p.value)
outlier=identify_outliers(heart["chol","thalach"])
outlier=identify_outliers(heart["chol"])
identify_outliers(heart["chol"])
identify_outliers(heart["thalach"])
max(heart$thalach)
df=heart%>%filter(chol<394&thalach>71)
heart%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(chol,thalach))$p.value)
df%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(chol,thalach))$p.value)
install.packages("heplots")
library(heplots)
bartlettTests(df[c("chol","thalach")],heart$cp)
bartlettTests(df[c("chol","thalach")],df$cp)
#Varyans Homojenliği Sağlandı
leveneTests(df[c("chol","thalach")],df$cp)
#Varyans Homojenliği Sağlandı
leveneTest(df$chol~df$cp)
#Varyans Homojenliği Sağlandı
leveneTest(df$chol,df$cp)
###Kovaryans Matrislerin Homojenliği
?box_m
cov(df$chol,df$thalach)
box_m(df[c("chol","thalach")],df$cp)
?manova()
manova(df[c("chol","thalach")]~df$cp)
manova(c("chol","thalach")~cp,data=df)
manova(cbind(chol,thalach)~cp,data=df)
model=manova(cbind(chol,thalach)~cp,data=df)
summary(model)
#Farklı kullanım
model2=lm(cbind(chol,thalach)~cp,data=df)
#Farklı kullanım
library(car)
Manova(model2)
?lm
Manova(model2,test.statistic="Pillai")
#Veri setini hazırlama
grouped_df=df%>%gather(key="variable",value = "values",chol,thalach)%>%
group_by(variable)
View(grouped_df)
#Welch Anova
grouped_df%>%convert_as_factor(cp)%>%
welch_anova_test(values~cp)
#TukeyHSD Test
grouped_df%>%convert_as_factor(cp)%>%
tukey_hsd(values~cp)
#TukeyHSD Test
grouped_df%>%convert_as_factor(cp)%>%
tukey_hsd(values~cp)
#Games-Howell Test
grouped_df%>%convert_as_factor(cp)%>%
games_howell_test(values~cp)
#Games-Howell Test
grouped_df%>%convert_as_factor(cp)%>%
games_howell_test(values~cp)
#Games-Howell Test
grouped_df%>%convert_as_factor(cp)%>%
games_howell_test(values~cp)
#TukeyHSD Test
grouped_df%>%convert_as_factor(cp)%>%
tukey_hsd(values~cp)
(values~cp)
#Games-Howell Test
grouped_df%>%convert_as_factor(cp)%>%
games_howell_test(values~cp)
grouped_df%>%convert_as_factor(cp)%>%
tukey_hsd(values~cp)
#Cp 0 grubu thalach değişkenine anlamlı bir etkisi var
#Games-Howell Test
grouped_df%>%convert_as_factor(cp)%>%
games_howell_test(values~cp)
View(grouped_df)
View(heart)
data()
covid_19_data <- read.csv("C:/Users/suley/Desktop/datasets/covid_19_data.csv")
View(covid_19_data)
df=subset(covid_19_data,subset = (Country.Region=="Turkey"))
View(df)
df=subset(covid_19_data,subset = (Country.Region=="Turkey"|Country.Region=="US"|Country.Region=="UK"))
View(df)
#1. Aykırı Değer Kontrolü
identify_outliers(df["confirmed"])
#1. Aykırı Değer Kontrolü
utlier=identify_outliers(df["Confirmed"])
#1. Aykırı Değer Kontrolü
identify_outliers(df["Confirmed"])
summarise(outlierc)
#1. Aykırı Değer Kontrolü
outlierc=identify_outliers(df["Confirmed"])
summarise(outlierc)
summary(outlierc)
df=df%>%filter(confirmed<504629)
df=df%>%filter(Confirmed<504629)
outlierc=identify_outliers(df["Deaths"])
#1. Aykırı Değer Kontrolü
outlierc=identify_outliers(df["Confirmed"])
outlierd=identify_outliers(df["Deaths"])
outlierc=identify_outliers(df["Recovered"])
#1. Aykırı Değer Kontrolü
outlierc=identify_outliers(df["Confirmed"])
outlierd=identify_outliers(df["Deaths"])
outlierr=identify_outliers(df["Recovered"])
summary(outlierd)
summary(outlierr)
View(outlierr)
hist(df$Confirmed)
outlierr
df=df%>%filter(Confirmed<504629|Deaths<6086)
df%>%group_by(Country.Region)%>%summarise(MultiNormallik=mshapiro_test(Confirmed,Deaths)$p.value)
df%>%group_by(Country.Region)%>%summarise(MultiNormallik=mshapiro_test(cbind(Confirmed,Deaths))$p.value)
df=df%>%filter(Confirmed<504629|Deaths<6086)%>%sample(size = 4000)
df=df%>%filter(Confirmed<504629|Deaths<6086)%>%sample(size = 400)
class(df$ObservationDate)
?as.Date()
df$ObservationDate=as.Date(df$ObservationDate,format="%d/%m/%Y")
class(df$ObservationDate)
df=df%>%filter(ObservationDate>"2020/01/01")
#1. Aykırı Değer Kontrolü
outlierc=identify_outliers(df["Confirmed"])
outlierd=identify_outliers(df["Deaths"])
hist(outlierc)
View(outlierr)
hist(outlierc[1])
hist(outlierc$Confirmed)
hist(df$Confirmed)
covid_19_data <- read.csv("C:/Users/suley/Desktop/datasets/covid_19_data.csv")
View(covid_19_data)
df=subset(covid_19_data,subset = (Country.Region=="Turkey"|Country.Region=="US"|Country.Region=="UK"))
#1. Aykırı Değer Kontrolü
outlierc=identify_outliers(df["Confirmed"])
outlierd=identify_outliers(df["Deaths"])
hist(df$Confirmed)
df$ObservationDate=as.Date(df$ObservationDate,format="%d/%m/%Y")
class(df$ObservationDate)
View(outlierc)
View(outlierd)
df=df%>%filter(ObservationDate>"2020/01/01")&(Confirmed<504629|Deaths>11543)
View(df)
df=df%>%filter(ObservationDate>"2020/01/01")%>%filter((Confirmed<504629|Deaths>11543))
df=df%>%filter(ObservationDate>"2020/01/01")%>%filter((Confirmed<504629&Deaths>11543))
hist(df$Confirmed)
View(df)
toy_dataset <- read.csv("C:/Users/suley/Desktop/toy_dataset.csv", stringsAsFactors=TRUE)
View(toy_dataset)
#Aykırı Değerler
identify_outliers(toy_dataset["Income"])
#Aykırı Değerler
outlier=identify_outliers(toy_dataset["Income"])
summary(outlier)
View(outlier)
hist(toy_dataset$Income)
boxplot(toy_dataset$Income)
df=toy_dataset%>%filter(Income>4500&Income<140000)
boxplot(df$Income)
df=toy_dataset%>%filter(Income>45000&Income<140000)
boxplot(df$Income)
df=toy_dataset%>%filter(Income>50000&Income<140000)
boxplot(df$Income)
df=toy_dataset%>%filter(Income>50000&Income<130000)
boxplot(df$Income)
boxplot(df$Income)
df=toy_dataset%>%filter(Income>55000&Income<130000)
boxplot(df$Income)
df=toy_dataset%>%filter(Income>59000&Income<130000)
boxplot(df$Income)
identify_outliers(df$Income)
identify_outliers(df["Income"])
min(identify_outliers(df["Income"]))
max(identify_outliers(df["Income"]))
df=toy_dataset%>%filter(Income>59154&Income<130000)
max(identify_outliers(df["Income"]))
identify_outliers(df["Income"])
df=toy_dataset%>%filter(Income>59192&Income<130000)
identify_outliers(df["Income"])
df=toy_dataset%>%filter(Income>59292&Income<130000)
identify_outliers(df["Income"])
df=toy_dataset%>%filter(Income>59207&Income<130000)
identify_outliers(df["Income"])
df=toy_dataset%>%filter(Income>59220&Income<130000)
identify_outliers(df["Income"])
hist(df$Income)
identify_outliers(df["Income"])
df1=df%>%group_by(age_groups=cut(Age,breaks=seq(min(Age)-1,max(Age)+1,length.out=4)))
View(df1)
levels(df1$age_groups)
View(df1)
df_new=df1%>%filter(gender,Income,age_groups)
df_new=df1%>%select(gender,Income,age_groups)
df_new=df1%>%select(Gender,Income,age_groups)
View(df_new)
class(df_new$Gender)
df_new%>%group_by(age_groups,Gender)%>%summarise(NormallikTesti=shapiro.test(Income)$p.value)
sample(df_new,size=2000)
pvalues=numeric(50)
ornek=sample(df_new$Income,size = 50)
ornek=sample(df_new$Income,size = 50)
ornek=sample(df_new$Income,size = 50)
ornek=sample(df_new$Income,size = 50)
ornek=sample(df_new$Income,size = 50)
ornek=sample(df_new$Income,size = 50)
ornek=sample(df_new$Income,size = 50)
ornek=sample(df_new$Income,size = 50)
for (i in 1:50) {
ornek=sample(df_new$Income,size = 50)
sonuc= df_new%>%group_by(age_groups,Gender)%>%summarise(NormallikTesti=shapiro.test(Income))
pvalue=sonuc$p.value
pvlaues[i]=pvalue
}
CAvideos <- read.csv("C:/Users/suley/Desktop/CAvideos.csv")
View(CAvideos)
CAvideos_new=CAvideos%>%filter(views>13418844)
CAvideos_new=CAvideos%>%filter(views>1535400)
CAvideos_new=CAvideos%>%filter(views>1718638)
CAvideos_new=CAvideos%>%filter(views>1935411)
CAvideos_new=CAvideos%>%filter(views>2172081)
View(CAvideos_new)
levels(CAvideos_new$category_id)
class(CAvideos_new$category_id)
CAvideos_new$category_id=as.factor(CAvideos_new$category_id)
class(CAvideos_new$category_id)
levels(CAvideos_new$category_id)
boxplot(CAvideos_new$views)
hist(CAvideos_new$views)
identify_outliers(CAvideos_new["views"])
s=identify_outliers(CAvideos_new["views"])
CAvideos_new$views=which(s)
CAvideos_new["views"]=which(s)
View(s)
summary(s)
df=CAvideos_new=CAvideos%>%filter(views<11861050)
df=CAvideos_new=CAvideos%>%filter(views<17613871)
CAvideos_new=CAvideos%>%filter(views>2172081)
df=CAvideos%>%filter(views<2172081)
df=CAvideos%>%filter(views<2172081&views>17613871)
df=CAvideos%>%filter(views<2172081&views<17613871)
CAvideos_new=CAvideos%>%filter(views>2172081)
CAvideos_new$category_id=as.factor(CAvideos_new$category_id)
class(CAvideos_new$category_id),
levels(CAvideos_new$category_id)
levels(CAvideos_new$category_id)
CAvideos_new%>%group_by(category_id)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(likes,views))$p.value)
View(CAvideos)
CAvideos_new=CAvideos%>%filter(views>26670001)
CAvideos_new=CAvideos%>%filter(views>22943745)
CAvideos_new=CAvideos%>%filter(views>20565795)
CAvideos_new=CAvideos%>%filter(views>20087204)
CAvideos_new$category_id=as.factor(CAvideos_new$category_id)
class(CAvideos_new$category_id)
levels(CAvideos_new$category_id)
CAvideos_new%>%group_by(category_id)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(likes,views))$p.value)
CAvideos <- read.csv("C:/Users/suley/Desktop/CAvideos.csv")
View(CAvideos)
CAvideos_new=CAvideos%>%filter(views>20087204)
class(CAvideos_new$category_id)
CAvideos_new$category_id=as.factor(CAvideos_new$category_id)
class(CAvideos_new$category_id)
levels(CAvideos_new$category_id)
CAvideos_new%>%group_by(category_id)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(likes,views))$p.value)
hist(CAvideos_new$views)
hist(CAvideos_new$likes)
hist(CAvideos_new$views)
CAvideos_new=CAvideos%>%filter(views>20087204)
View(CAvideos_new)
View(CAvideos_new)
class(CAvideos_new$category_id)
CAvideos_new$category_id=as.factor(CAvideos_new$category_id)
levels(CAvideos_new$category_id)
CAvideos_new%>%group_by(category_id)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(likes,views))$p.value)
CAvideos_new%>%group_by(category_id)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(likes,views))$p.value)
CAvideos_new%>%group_by(category_id)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(likes,views))$p.value)
insurance <- read.csv("C:/Users/suley/Downloads/insurance.csv")
View(insurance)
hist(insurance$charges)
class(insurance$smoker)
hist(insurance$bmi)
identify_outliers(insurance["bmi"])
insurance1=insurance%>%filter(bmi<47.52)
insurance1$sex=as.factor(insurance1$sex)
class(insurance1$sex)
insurance1$smoker=as.factor(insurance1$smoker)
class(insurance1$smoker)
insurance1%>%group_by(sex,smoker)%>%summarise(Normallik=shapiro.test(bmi)$p.value)
#Varyans Homojenliği Testi
bartlett.test(insurance1$bmi~interaction(insurance1$sex,insurance1$smoker))
anova_test(insurance1,dv=bmi,between = c(sex,smoker))
a=anova_test(insurance1,dv=bmi,between = c(sex,smoker))
tukey_hsd(a)
TukeyHSD(a)
heart <- read.csv("C:/Users/Acer/Desktop/r ile veri bilimi/istatistik/varyans_analizi/heart.csv")
View(heart)
library(rstatix)
library(tidyverse)
library(mvnormtest)
heart%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(chol,thalach))$p.value)
#sadece 3. grup normal değil
#Aykırı Değerler
identify_outliers(heart["chol"])#chol<394
identify_outliers(heart["thalach"])#thalach>71
df=heart%>%filter(chol<394&thalach>71)
#Normallik testi
df%>%group_by(cp)%>%
summarise(MultiSahpiro=mshapiro_test(cbind(chol,thalach))$p.value)
#Binom Testi
#Sadece 2 seviyeli değişkenlerde kullanılabilir
?binom.test
soru1=SPSS_Gorus_Anketi$`Mesleğim gereği istatistik yazılımlarını kullanmayı öğrenmem gerekir.`
table(soru1)#Sadece katılıyorum ve katılmıyorum
soru1_binom=soru1[soru1=="Katılıyorum"]
soru1_binom=append(soru1_binom,soru1[soru1=="Katılmıyorum"])#2 sini ekledik
table(soru1_binom)
binom.test(x=24,n=30,p=0.5)
#Ho:Katılıyorumlar olasılığı 0.5e eşittir
#Ha:Katılıyorumlar olasılığı 0.5e eşit değildir--->kabul edildi
binom.test(x=24,n=30,p=0.5,alternative = "greater")
#Ho:Katılıyorumlar olasılığı 0.5e eşittir veya küçüktür
#Ha:Katılıyorumlar olasılığı 0.5e büyüktür-->Kabul Edildi
binom.test(x=24,n=30,p=0.5,alternative = "less")
#Ho:Katılıyorumlar olasılığı 0.5e eşittir veya büyüktür-->Kabul Edildi
#Ha:Katılıyorumlar olasılığı 0.5e küçüktür
binom.test(x=24,n=30,p=0.7,alternative = "greater")
binom.test(x=c(24,6),p=0.7,alternative = "greater")
?dunif
runif(2700i-20,20)
runif(2700,min=-20,max=20)
t2=runif(2700,min=-20,max=20)
plot(t2)
plot(1:40,dunif(x=1:40,min=1,max = 40),pch=19,bty="L",col="red")
sum(dunif(x=1:5,min=0,max=10))#-->punif sonucu
#Tüm değerler eşittir
plot(1:40,dunif(x=1:40,min=1,max = 40),pch=19,bty="L",col="red")
sum(dunif(x=1:5,min=0,max=10))#-->punif sonucu
plot(-20:20,dunif(x=1:2700,min=-20,max = 20),pch=19,bty="L",col="red")
plot(-20:20,dunif(x=-20:20,min=-20,max = 20),pch=19,bty="L",col="red")
install.packages("Rcmdr")
